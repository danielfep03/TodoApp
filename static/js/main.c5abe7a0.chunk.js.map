{"version":3,"sources":["images/icon-sun.svg","images/icon-moon.svg","hooks/useTheme.jsx","components/Banner.jsx","components/AddTask.jsx","images/icon-cross.svg","images/icon-check.svg","components/Task.jsx","components/TaskList.jsx","components/Nav.jsx","components/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useTheme","theme","useLayoutEffect","key","document","documentElement","style","setProperty","Banner","light_theme","dark_theme","useState","setTheme","className","onClick","currentTheme","JSON","stringify","console","log","src","sun","moon","alt","AddTask","Task","completed","Check","Cross","TaskList","Nav","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6TAAe,MAA0B,qCCA1B,MAA0B,sCCa1BA,MAXf,SAAkBC,GACdC,2BACI,WACI,IAAK,IAAMC,KAAOF,EACdG,SAASC,gBAAgBC,MAAMC,YAA/B,YAAgDJ,GAAOF,EAAME,MAGrE,CAACF,K,eCqCMO,MApCf,WACI,IAAMC,EAAc,CAChB,KAAQ,OACR,WAAc,UACd,YAAe,UACf,KAAQ,WAGNC,EAAa,CACf,KAAQ,UACR,WAAc,qBACd,YAAe,UACf,KAAQ,WAGZ,EAA0BC,mBAASF,GAAnC,mBAAOR,EAAP,KAAcW,EAAd,KAWA,OAFAZ,EAASC,GAGL,sBAAKY,UAAU,SAAf,UACI,sCACA,wBAAQA,UAAU,kBAAkBC,QAZxB,WAChB,IAAIC,EAAgBC,KAAKC,UAAUP,IAAeM,KAAKC,UAAUhB,GAASQ,EAAcC,EACxFE,EAASG,GACTG,QAAQC,IAAIJ,IASR,SACI,qBAAKK,IAAKJ,KAAKC,UAAUP,IAAeM,KAAKC,UAAUhB,GAASoB,EAAMC,EAAMC,IAAI,c,MC3BjFC,MAVf,WACI,OACI,sBAAKX,UAAU,YAAf,UACI,qBAAKA,UAAU,WAEf,yDCRG,MAA0B,uCCA1B,MAA0B,uC,MC8B1BY,MAlBf,YAA4B,IAAbC,EAAY,EAAZA,UACX,OACI,sBAAKb,UAAW,SAAWa,GAAa,aAAxC,UACI,sBAAKb,UAAU,UAAf,UACI,qBAAKA,UAAWa,EAAY,mBAAqB,QAAjD,SACKA,GAAa,qBAAKN,IAAKO,EAAOJ,IAAI,OAEvC,sBAAMV,UAAWa,EAAY,YAAc,GAA3C,2BAEJ,qBAAKN,IAAKQ,EAAOL,IAAI,S,MCClBM,MAjBf,WACI,OACI,sBAAKhB,UAAU,aAAf,UACI,cAAC,EAAD,CAAMa,WAAa,IACnB,cAAC,EAAD,CAAMA,WAAa,IACnB,cAAC,EAAD,CAAMA,WAAa,IACnB,cAAC,EAAD,CAAMA,WAAa,IACnB,cAAC,EAAD,CAAMA,WAAa,IACnB,cAAC,EAAD,CAAMA,WAAa,IACnB,sBAAKb,UAAU,SAAf,UACI,gDACA,0D,MCADiB,MAZf,WACI,OACI,8BACI,sBAAKjB,UAAU,MAAf,UACI,wBAAQA,UAAU,WAAlB,iBACA,4CACA,oD,MCQDkB,MAXf,WACI,OACI,sBAAKlB,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qE,MCIGmB,MAXf,WAEI,OAEI,sBAAKnB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCAGoB,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJxC,SAASyC,eAAe,SAM5BZ,M","file":"static/js/main.c5abe7a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import {useLayoutEffect} from 'react'\n\nfunction useTheme(theme) {\n    useLayoutEffect(\n        () => {\n            for (const key in theme) {\n                document.documentElement.style.setProperty(`--${key}`, theme[key])\n            }\n        },\n        [theme]\n    )\n}\n\nexport default useTheme\n","import React, { useState } from 'react'\n// import React from 'react'\n\nimport sun from '../images/icon-sun.svg'\nimport moon from '../images/icon-moon.svg'\n\nimport useTheme from '../hooks/useTheme'\n\nimport '../styles/Banner.css'\n\nfunction Banner() {\n    const light_theme = {\n        'task': '#fff',\n        'background': '#F6F6F8',\n        'border_dark': '#9B9BA3',\n        'text': '#555660'\n    }\n\n    const dark_theme = {\n        'task': '#25273C',\n        'background': 'hsl(235, 21%, 11%)',\n        'border_dark': '#373a54',\n        'text': '#555660'\n    }\n\n    const [theme, setTheme] = useState(light_theme)\n\n    const handleTheme = () => {\n        let currentTheme = (JSON.stringify(dark_theme) == JSON.stringify(theme) ? light_theme : dark_theme)\n        setTheme(currentTheme)\n        console.log(currentTheme)\n        // console.log(theme)\n    }\n\n    useTheme(theme)\n\n    return (\n        <div className=\"banner\">\n            <h1>TODO</h1>\n            <button className=\"theme__selector\" onClick={handleTheme}>\n                <img src={JSON.stringify(dark_theme) == JSON.stringify(theme) ? sun : moon} alt=\"Sun\" />\n            </button>\n        </div>\n    )\n}\n\nexport default Banner\n","import React from 'react'\n\nimport '../styles/AddTask.css'\nfunction AddTask() {\n    return (\n        <div className=\"add__task\">\n            <div className=\"circle\">\n            </div>\n            <span>Create a new todo</span>\n        </div>\n    )\n}\n\nexport default AddTask\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","import React from 'react'\n\nimport Cross from '../images/icon-cross.svg'\nimport Check from '../images/icon-check.svg'\nimport '../styles/Task.css'\nimport PropTypes from 'prop-types'\n\n/**\n * @param {object} props - Task Properties\n * @param {boolean} props.completed - Is task compled?\n */\n\nfunction Task({completed}) {\n    return (\n        <div className={'task ' + (completed && 'completed')} >\n            <div className=\"wrapper\">\n                <div className={completed ? 'check__completed' : 'check'}>\n                    {completed && <img src={Check} alt=\"\" />}\n                </div>\n                <span className={completed ? 'completed' : ''}>Job around</span>\n            </div>\n            <img src={Cross} alt=\"\" />\n        </div>\n    )\n}\n\nTask.propTypes = {\n    completed: PropTypes.bool,\n}\n\nexport default Task\n","import React from 'react'\nimport Task from './Task'\n\nimport '../styles/TaskList.css'\n\nfunction TaskList() {\n    return (\n        <div className=\"task__list\">\n            <Task completed = {true}/>\n            <Task completed = {true}/>\n            <Task completed = {false}/>\n            <Task completed = {false}/>\n            <Task completed = {false}/>\n            <Task completed = {false}/>\n            <div className=\"resume\">\n                <span>5 items left</span>\n                <span>Clear Completed</span>\n            </div>\n        </div>\n    )\n}\n\nexport default TaskList\n","import React from 'react'\n\nimport '../styles/Nav.css'\n\nfunction Nav() {\n    return (\n        <div>\n            <div className=\"nav\">\n                <button className=\"selected\">All</button>\n                <button>Active</button>\n                <button>Complete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Nav\n","import React from 'react'\nimport AddTask from './AddTask'\nimport TaskList from './TaskList'\nimport Nav from './Nav'\n\nimport '../styles/Container.css'\n\nfunction Container() {\n    return (\n        <div className=\"container\">\n            <AddTask />\n            <TaskList />\n            <Nav />\n            <span>Drag and drop to reorder list</span>\n        </div>\n    )\n}\n\nexport default Container\n","import React from 'react'\nimport Banner from './components/Banner'\nimport Container from './components/Container'\n\nimport './styles/App.css'\n\nfunction App() {\n   \n    return (\n\n        <div className=\"App\">\n            <Banner />\n            <Container />\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}