{"version":3,"sources":["images/icon-sun.svg","images/icon-moon.svg","hooks/useTheme.jsx","components/Banner.jsx","context/AppContext.js","components/AddTask.jsx","images/icon-cross.svg","images/icon-check.svg","components/Task.jsx","components/TaskList.jsx","components/Resume.jsx","components/Nav.jsx","components/Container.jsx","initialState.js","hooks/useInitialState.js","App.jsx","reportWebVitals.js","index.js"],"names":["useTheme","theme","useLayoutEffect","key","document","documentElement","style","setProperty","Banner","light_theme","dark_theme","useState","setTheme","className","onClick","currentTheme","JSON","stringify","src","sun","moon","alt","AppContext","React","createContext","AddTask","description","setDescription","createTask","useContext","handleCreateTask","event","type","placeholder","value","onChange","e","target","onKeyUp","Task","completed","name","id","draggableProvided","stateInit","handleCheck","deleteTask","draggableProps","ref","innerRef","dragHandleProps","Check","Cross","TaskList","active","initialState","state","setState","activeTask","filter","item","taskCompleted","dragEnd","result","source","destination","index","drppableId","droppableId","newArray","list","startIndex","endIndex","splice","removed","reorder","localStorage","setItem","onDragEnd","droppableProvided","droppableProps","map","task","draggableId","uuid","Resume","length","console","log","forEach","Nav","handleShowCompleted","handleShowActive","handleShowAll","whichShow","setWhichShow","Container","showCompleted","setShowCompleted","showActive","setShowActive","dataDummy","getItem","data","parse","useInitialState","newTask","toString","storage","push","newState","removeCompletedTask","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8VAAe,MAA0B,qCCA1B,MAA0B,sCCa1BA,MAXf,SAAkBC,GACdC,2BACI,WACI,IAAK,IAAMC,KAAOF,EACdG,SAASC,gBAAgBC,MAAMC,YAA/B,YAAgDJ,GAAOF,EAAME,MAGrE,CAACF,K,eCuCMO,MAtCf,WACI,IAAMC,EAAc,CAChB,KAAQ,OACR,WAAc,UACd,YAAe,UACf,KAAQ,UACR,MAAS,sBAGPC,EAAa,CACf,KAAQ,UACR,WAAc,qBACd,YAAe,UACf,KAAQ,qBACR,MAAS,sBAGb,EAA0BC,mBAASF,GAAnC,mBAAOR,EAAP,KAAcW,EAAd,KASA,OAFAZ,EAASC,GAGL,qBAAKY,UAAU,SAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,sCACA,wBAAQA,UAAU,kBAAkBC,QAX5B,WAChB,IAAIC,EAAgBC,KAAKC,UAAUP,IAAeM,KAAKC,UAAUhB,GAASQ,EAAcC,EACxFE,EAASG,IASD,SACI,qBAAKG,IAAKF,KAAKC,UAAUP,IAAeM,KAAKC,UAAUhB,GAASkB,EAAMC,EAAMC,IAAI,gBCrCrFC,EAFIC,IAAMC,cAAc,I,MCoCxBC,MAjCf,WACI,MAAsCd,mBAAS,IAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KAEOC,EADcC,qBAAWP,GACzBM,WAEDE,EAAmB,SAACC,GACH,IAAfL,IAGc,UAAdK,EAAM5B,KACNyB,EAAWF,GACXC,EAAe,KAEK,UAAfI,EAAMC,MACXJ,EAAWF,KAGnB,OACI,sBAAKb,UAAU,YAAf,UACI,wBAAQA,UAAU,SAASC,QAASgB,IAEpC,uBAAOjB,UAAU,mBACbmB,KAAK,OACLC,YAAY,oBACZC,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOT,EAAeS,EAAEC,OAAOH,QACzCI,QAASR,Q,cC/BV,MAA0B,uCCA1B,MAA0B,uCC2B1BS,G,MAlBF,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,kBAC1BC,EAAYf,qBAAWP,GACtBuB,EAA2BD,EAA3BC,YAAaC,EAAcF,EAAdE,WACpB,OACI,0DAAKjC,UAAW,SAAW2B,GAAa,cAAkBG,EAAkBI,gBAA5E,IAA4FC,IAAKL,EAAkBM,UAAcN,EAAkBO,iBAAnJ,cACI,sBAAKrC,UAAU,UAAf,UACI,wBAAQA,UAAW,UAAY2B,GAAa,WAAY1B,QAAS,kBAAM+B,EAAYH,IAAnF,SACKF,GAAa,qBAAKtB,IAAKiC,EAAO9B,IAAI,OAEvC,sBAAMR,UAAW2B,EAAY,YAAc,GAA3C,SAAgDC,OAEpD,wBAAQ5B,UAAU,QAAQC,QAAS,kBAAMgC,EAAWJ,IAApD,SACI,qBAAKxB,IAAKkC,EAAO/B,IAAI,a,uBC0FtBgC,MAtGf,YAAwC,IAArBb,EAAoB,EAApBA,UAAWc,EAAS,EAATA,OACpBC,EAAe1B,qBAAWP,GACzBkC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,SAERC,EAAaF,EAAMG,QAAO,SAACC,GAAD,OAA6B,IAAnBA,EAAKpB,aACzCqB,EAAgBL,EAAMG,QAAO,SAACC,GAAD,OAAUA,EAAKpB,aAU5CsB,EAAU,SAACC,GACb,IAAOC,EAAuBD,EAAvBC,OAAQC,EAAeF,EAAfE,YACf,GAAKA,IAGDD,EAAOE,QAAUD,EAAYC,OAASF,EAAOG,aAAeF,EAAYG,aAA5E,CAGA,IAAMC,EAhBM,SAACC,EAAMC,EAAYC,GAC/B,IAAMT,EAAM,YAAOO,GACnB,EAAkBP,EAAOU,OAAOF,EAAY,GAArCG,EAAP,oBAGA,OAFAX,EAAOU,OAAOD,EAAU,EAAGE,GAEpBX,EAWUY,CAAQnB,EAAOQ,EAAOE,MAAOD,EAAYC,OAC1DT,EAASY,GACTO,aAAaC,QAAQ,QAAS7D,KAAKC,UAAUoD,MAGjD,OAAI7B,EAGI,cAAC,IAAD,CAAiBsC,UAAWhB,EAA5B,SACI,cAAC,IAAD,CAAWM,YAAY,QAAvB,SACM,SAACW,GAAD,OACE,gDACQA,EAAkBC,gBAD1B,IAEIhC,IAAK+B,EAAkB9B,SACvBpC,UAAU,aAHd,UAMKgD,EAAcoB,KAAI,WAAwBf,GAAxB,IAAE1B,EAAF,EAAEA,UAAW0C,EAAb,EAAaA,KAAMxC,EAAnB,EAAmBA,GAAnB,OAAmC,cAAC,IAAD,CAAwByC,YAAazC,EAAIwB,MAAOA,EAAhD,SAChD,SAACvB,GACC,OAAQ,cAAC,EAAD,CAAMF,KAAMyC,EAAM1C,UAAWA,EAAWE,GAAIA,EAAIC,kBAAmBA,MAFbyC,kBAMrEL,EAAkB9C,qBAQvCqB,EAGI,cAAC,IAAD,CAAiBwB,UAAWhB,EAA5B,SACI,cAAC,IAAD,CAAWM,YAAY,QAAvB,SACM,SAACW,GAAD,OACE,gDACQA,EAAkBC,gBAD1B,IAEIhC,IAAK+B,EAAkB9B,SACvBpC,UAAU,aAHd,UAMK6C,EAAWuB,KAAI,WAAwBf,GAAxB,IAAE1B,EAAF,EAAEA,UAAW0C,EAAb,EAAaA,KAAMxC,EAAnB,EAAmBA,GAAnB,OAAmC,cAAC,IAAD,CAAwByC,YAAazC,EAAIwB,MAAOA,EAAhD,SAC7C,SAACvB,GACC,OAAQ,cAAC,EAAD,CAAMF,KAAMyC,EAAM1C,UAAWA,EAAWE,GAAIA,EAAIC,kBAAmBA,MAFhByC,kBAMlEL,EAAkB9C,qBASvC,cAAC,IAAD,CAAiB6C,UAAWhB,EAA5B,SACI,cAAC,IAAD,CAAWM,YAAY,QAAvB,SACM,SAACW,GAAD,OACE,gDACQA,EAAkBC,gBAD1B,IAEIhC,IAAK+B,EAAkB9B,SACvBpC,UAAU,aAHd,UAMK2C,EAAMyB,KAAI,WAAwBf,GAAxB,IAAE1B,EAAF,EAAEA,UAAW0C,EAAb,EAAaA,KAAMxC,EAAnB,EAAmBA,GAAnB,OAAmC,cAAC,IAAD,CAAwByC,YAAazC,EAAIwB,MAAOA,EAAhD,SACxC,SAACvB,GAAD,OAAwB,cAAC,EAAD,CAAMF,KAAMyC,EAAM1C,UAAWA,EAAWE,GAAIA,EAAIC,kBAAmBA,MADnCyC,kBAI7DL,EAAkB9C,sB,MChF5BoD,MAlBf,WACI,IAAM9B,EAAe1B,qBAAWP,GACzBkC,EAAqBD,EAArBC,MAAOV,EAAcS,EAAdT,WAERY,EAAaF,EAAMG,QAAO,SAACC,GAAD,OAA6B,IAAnBA,EAAKpB,aAM/C,OACI,sBAAK3B,UAAU,SAAf,UACI,iCAAO6C,EAAW4B,OAAlB,iBACA,wBAAQxE,QARY,WACxByE,QAAQC,IAAIhC,GACZA,EAAMiC,SAAQ,SAACP,GAAD,OAAUA,EAAK1C,WAAaM,EAAWoC,EAAKxC,QAMhB7B,UAAU,mBAAhD,iC,MCeG6E,MA7Bf,YAAsE,IAAxDC,EAAuD,EAAvDA,oBAAqBC,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,cAEjD,EAAkClF,mBAAS,GAA3C,mBAAOmF,EAAP,KAAkBC,EAAlB,KAgBA,OACI,8BACI,sBAAKlF,UAAU,MAAf,UACI,wBAAQA,UAAyB,IAAdiF,EAAkB,WAAa,GAAIhF,QARlD,WACZiF,EAAa,GACbF,KAMQ,iBACA,wBAAQhF,UAAyB,IAAdiF,EAAkB,WAAa,GAAIhF,QAnB/C,WACfiF,EAAa,GACbH,KAiBQ,oBACA,wBAAQ/E,UAAyB,IAAdiF,EAAkB,WAAa,GAAIhF,QAf5C,WAClBiF,EAAa,GACbJ,KAaQ,4B,MCiBDK,MArCf,WACI,MAA0CrF,oBAAS,GAAnD,mBAAOsF,EAAP,KAAsBC,EAAtB,KACA,EAAoCvF,oBAAS,GAA7C,mBAAOwF,EAAP,KAAmBC,EAAnB,KAsBA,OACI,sBAAKvF,UAAU,YAAf,UACI,cAAC,EAAD,IACA,gCACI,cAAC,EAAD,CAAU2B,UAAWyD,EAAe3C,OAAQ6C,IAC5C,cAAC,EAAD,OAEJ,cAAC,EAAD,CAAKR,oBA3Be,YACL,IAAfQ,GACAC,GAAc,GAElBF,GAAiB,IAuBkCN,iBApB9B,YACC,IAAlBK,GACAC,GAAiB,GAErBE,GAAc,IAgByEP,cAbrE,WAClBO,GAAc,GACdF,GAAiB,MAYb,qECpCNG,EAAY,CACd,CACI3D,GAAI1B,KAAKC,UAAUmE,eACnBF,KAAM,oCACN1C,WAAW,GAEf,CACIE,GAAI1B,KAAKC,UAAUmE,eACnBF,KAAM,yBACN1C,WAAW,GAEf,CACIE,GAAI1B,KAAKC,UAAUmE,eACnBF,KAAM,wBACN1C,WAAW,GAEf,CACIE,GAAI1B,KAAKC,UAAUmE,eACnBF,KAAM,kBACN1C,WAAW,GAEf,CACIE,GAAI1B,KAAKC,UAAUmE,eACnBF,KAAM,oBACN1C,WAAW,GAEf,CACIE,GAAI1B,KAAKC,UAAUmE,eACnBF,KAAM,uCACN1C,WAAW,IAIfe,EAAe,GAEnB,GAAsC,OAAlCqB,aAAa0B,QAAQ,SACrB/C,EAAY,UAAO8C,GACnBzB,aAAaC,QAAQ,QAAS7D,KAAKC,UAAUoF,QAE5C,CACD,IAAME,EAAOvF,KAAKwF,MAAM5B,aAAa0B,QAAQ,UAC7C/C,EAAY,YAAOgD,GAGRhD,QCQAkD,EAjDS,WACpB,MAA0B9F,mBAAS4C,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAsCA,MAAO,CACHD,QACAC,WACA7B,WAvCe,SAACa,GAChB,IAAMiE,EAAU,CAAChE,GAAI0C,cAAOuB,WAAYzB,KAAMzC,EAAMD,WAAW,GACzDoE,EAAU5F,KAAKwF,MAAM5B,aAAa0B,QAAQ,UAChDM,EAAQC,KAAKH,GAEb9B,aAAaC,QAAQ,QAAS7D,KAAKC,UAAU2F,IAE7CnD,EAAS,GAAD,mBACDD,GADC,CAEJkD,MA+BJ7D,YA3BgB,SAACqC,GACjB,IAAM4B,EAAWtD,EAAMyB,KAAI,SAACrB,GAAD,OAAWA,EAAKlB,KAAOwC,EAAb,YAAC,eAAwBtB,GAAzB,IAA+B,WAAcA,EAAKpB,YAAaoB,KACpGgB,aAAaC,QAAQ,QAAS7D,KAAKC,UAAU6F,IAC7CrD,EAAS,YACFqD,KAwBPhE,WApBe,SAACoC,GAChB,IAAM4B,EAAWtD,EAAMG,QAAO,SAACC,GAAD,OAAWA,EAAKlB,KAAOwC,KACrDN,aAAaC,QAAQ,QAAS7D,KAAKC,UAAU6F,IAC7CrD,EAAS,YACFqD,KAiBPC,oBAbwB,WACxB,IAAMD,EAAWtD,EAAMG,QAAO,SAACC,GAAD,OAA6B,IAAnBA,EAAKpB,aAC7CiB,EAAS,YACFqD,O,MCpBAE,MAZf,WACI,IAAMzD,EAAekD,IACrB,OACI,qBAAK5F,UAAU,MAAf,SACI,eAAC,EAAWoG,SAAZ,CAAqB/E,MAAOqB,EAA5B,UACI,cAAC,EAAD,IACA,cAAC,EAAD,UCHD2D,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJzH,SAAS0H,eAAe,SAM5BZ,M","file":"static/js/main.f3fa454e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.ad189f9c.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import {useLayoutEffect} from 'react'\n\nfunction useTheme(theme) {\n    useLayoutEffect(\n        () => {\n            for (const key in theme) {\n                document.documentElement.style.setProperty(`--${key}`, theme[key])\n            }\n        },\n        [theme]\n    )\n}\n\nexport default useTheme\n","import React, { useState } from 'react'\n// import React from 'react'\n\nimport sun from '../images/icon-sun.svg'\nimport moon from '../images/icon-moon.svg'\n\nimport useTheme from '../hooks/useTheme'\n\nimport '../styles/Banner.css'\n\nfunction Banner() {\n    const light_theme = {\n        'task': '#fff',\n        'background': '#F6F6F8',\n        'border_dark': '#9B9BA3',\n        'text': '#555660',\n        'hover': 'hsl(235, 19%, 35%)'\n    }\n\n    const dark_theme = {\n        'task': '#25273C',\n        'background': 'hsl(235, 21%, 11%)',\n        'border_dark': '#373a54',\n        'text': 'hsl(234, 39%, 85%)',\n        'hover': 'hsl(236, 33%, 92%)'\n    }\n\n    const [theme, setTheme] = useState(light_theme)\n\n    const handleTheme = () => {\n        let currentTheme = (JSON.stringify(dark_theme) == JSON.stringify(theme) ? light_theme : dark_theme)\n        setTheme(currentTheme)\n    }\n\n    useTheme(theme)\n\n    return (\n        <div className=\"banner\">\n            <div className=\"banner__wrapper\">\n                <h1>TODO</h1>\n                <button className=\"theme__selector\" onClick={handleTheme}>\n                    <img src={JSON.stringify(dark_theme) == JSON.stringify(theme) ? sun : moon} alt=\"Sun\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Banner\n","import React from 'react'\n\nconst AppContext = React.createContext({})\n\nexport default AppContext","import React, {useState, useContext} from 'react'\nimport AppContext from '../context/AppContext'\n\nimport '../styles/AddTask.css'\n\nfunction AddTask () {\n    const [description, setDescription] = useState('')\n    const initialState = useContext(AppContext)\n    const {createTask} = initialState\n\n    const handleCreateTask = (event) => {\n        if (description == ''){\n            return\n        }\n        if (event.key === 'Enter') {\n            createTask(description)\n            setDescription('')\n        }\n        else if (event.type === 'click') {\n            createTask(description)\n        }\n    }\n    return (\n        <div className=\"add__task\">\n            <button className=\"circle\" onClick={handleCreateTask}>\n            </button>\n            <input className=\"input__new__task\"\n                type=\"text\"\n                placeholder=\"Create a new todo\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                onKeyUp={handleCreateTask}\n            >\n            </input>\n        </div>\n    )\n}\n\nexport default AddTask\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","// @ts-nocheck\nimport React, {useContext} from 'react'\n\nimport Cross from '../images/icon-cross.svg'\nimport Check from '../images/icon-check.svg'\n\nimport AppContext from '../context/AppContext'\nimport '../styles/Task.css'\n\nconst Task = ({completed, name, id, draggableProvided}) => {\n    const stateInit = useContext(AppContext)\n    const {handleCheck, deleteTask} = stateInit\n    return (\n        <div className={'task ' + (completed && 'completed')} {...draggableProvided.draggableProps} ref={draggableProvided.innerRef} {...draggableProvided.dragHandleProps}>\n            <div className=\"wrapper\">\n                <button className={'check ' + (completed && 'checked')} onClick={() => handleCheck(id)}>\n                    {completed && <img src={Check} alt=\"\" />}\n                </button>\n                <span className={completed ? 'completed' : ''}>{name}</span>\n            </div>\n            <button className='cross' onClick={() => deleteTask(id)}>\n                <img src={Cross} alt=\"\" />\n            </button>\n        </div>\n    )\n}\n\nexport default Task\n","import React, {useContext} from 'react'\nimport Task from './Task'\n// import Resume from './Resume'\nimport {v4 as uuid} from 'uuid'\nimport AppContext from '../context/AppContext'\nimport '../styles/TaskList.css'\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\nfunction TaskList({completed, active}) {\n    const initialState = useContext(AppContext)\n    const {state, setState} = initialState\n\n    const activeTask = state.filter((item) => item.completed === false)\n    const taskCompleted = state.filter((item) => item.completed)\n\n    const reorder = (list, startIndex, endIndex) => {\n        const result = [...list]\n        const [removed] = result.splice(startIndex, 1)\n        result.splice(endIndex, 0, removed)\n\n        return result\n    }\n\n    const dragEnd = (result) => {\n        const {source, destination} = result\n        if (!destination){\n            return\n        }\n        if (source.index === destination.index && source.drppableId === destination.droppableId) {\n            return\n        }\n        const newArray = reorder(state, source.index, destination.index)\n        setState(newArray)\n        localStorage.setItem('tasks', JSON.stringify(newArray))\n    }\n\n    if (completed)\n    {\n        return (\n            <DragDropContext onDragEnd={dragEnd}>\n                <Droppable droppableId='tasks'>\n                    { (droppableProvided) => (\n                        <div\n                            {...droppableProvided.droppableProps}\n                            ref={droppableProvided.innerRef}\n                            className=\"task__list\"\n                        >\n\n                            {taskCompleted.map(({completed, task, id}, index) => (<Draggable key={uuid()} draggableId={id} index={index}>\n                                { (draggableProvided) => {\n                                    return (<Task name={task} completed={completed} id={id} draggableProvided={draggableProvided}/>)\n                                }}\n                            </Draggable>))}\n\n                            {droppableProvided.placeholder}\n\n                        </div>)}\n                </Droppable>\n            </DragDropContext>\n        )\n    }\n\n    if (active)\n    {\n        return (\n            <DragDropContext onDragEnd={dragEnd}>\n                <Droppable droppableId=\"tasks\">\n                    { (droppableProvided) => (\n                        <div\n                            {...droppableProvided.droppableProps}\n                            ref={droppableProvided.innerRef}\n                            className=\"task__list\"\n                        >\n\n                            {activeTask.map(({completed, task, id}, index) => (<Draggable key={uuid()} draggableId={id} index={index}>\n                                { (draggableProvided) => {\n                                    return (<Task name={task} completed={completed} id={id} draggableProvided={draggableProvided}/>)\n                                }}\n                            </Draggable>))}\n\n                            {droppableProvided.placeholder}\n\n                        </div>)}\n                </Droppable>\n            </DragDropContext>\n        )\n    }\n\n    return (\n        <DragDropContext onDragEnd={dragEnd}>\n            <Droppable droppableId=\"tasks\">\n                { (droppableProvided) => (\n                    <div\n                        {...droppableProvided.droppableProps}\n                        ref={droppableProvided.innerRef}\n                        className=\"task__list\"\n                    >\n\n                        {state.map(({completed, task, id}, index) => (<Draggable key={uuid()} draggableId={id} index={index}>\n                            { (draggableProvided) => (<Task name={task} completed={completed} id={id} draggableProvided={draggableProvided}/>) }\n                        </Draggable>))}\n\n                        {droppableProvided.placeholder}\n\n                    </div>)}\n            </Droppable>\n        </DragDropContext>\n    )\n}\n\nexport default TaskList\n","import React, {useContext} from 'react'\nimport AppContext from '../context/AppContext'\n\nimport '../styles/Resume.css'\n\nfunction Resume() {\n    const initialState = useContext(AppContext)\n    const {state, deleteTask} = initialState\n\n    const activeTask = state.filter((item) => item.completed === false)\n    const removeCompletedTask = () => {\n        console.log(state)\n        state.forEach((task) => task.completed && deleteTask(task.id))\n    }\n\n    return (\n        <div className=\"resume\">\n            <span>{activeTask.length} items left</span>\n            <button onClick={removeCompletedTask} className=\"clear__Completed\">Clear Completed</button>\n        </div>\n    )\n}\n\nexport default Resume\n","import React, {useState} from 'react'\n\nimport '../styles/Nav.css'\n\nfunction Nav({handleShowCompleted, handleShowActive, handleShowAll}) {\n\n    const [whichShow, setWhichShow] = useState(0)\n    const showActive = () => {\n        setWhichShow(1)\n        handleShowActive()\n    }\n\n    const showCompleted = () => {\n        setWhichShow(2)\n        handleShowCompleted()\n    }\n\n    const showAll = () => {\n        setWhichShow(0)\n        handleShowAll()\n    }\n\n    return (\n        <div>\n            <div className=\"nav\">\n                <button className={whichShow === 0 ? 'selected' : ''} onClick={showAll}>All</button>\n                <button className={whichShow === 1 ? 'selected' : ''} onClick={showActive}>Active</button>\n                <button className={whichShow === 2 ? 'selected' : ''} onClick={showCompleted}>Complete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Nav\n","import React, {useState} from 'react'\nimport AddTask from './AddTask'\nimport TaskList from './TaskList'\nimport Resume from './Resume'\nimport Nav from './Nav'\nimport '../styles/Container.css'\n\nfunction Container() {\n    const [showCompleted, setShowCompleted] = useState(false)\n    const [showActive, setShowActive] = useState(false)\n\n    const handleShowCompleted = () => {\n        if (showActive === true){\n            setShowActive(false)\n        }\n        setShowCompleted(true)\n    }\n\n    const handleShowActive = () => {\n        if (showCompleted === true){\n            setShowCompleted(false)\n        }\n        setShowActive(true)\n    }\n\n    const handleShowAll = () => {\n        setShowActive(false)\n        setShowCompleted(false)\n    }\n   \n\n    return (\n        <div className=\"container\">\n            <AddTask />\n            <div>\n                <TaskList completed={showCompleted} active={showActive} />\n                <Resume />\n            </div>\n            <Nav handleShowCompleted={handleShowCompleted} handleShowActive={handleShowActive} handleShowAll={handleShowAll}/>\n            <span>Drag and drop to reorder list</span>\n        </div>\n    )\n}\n\nexport default Container\n","import {v4 as uuid} from 'uuid'\n\n\nconst dataDummy = [\n    {\n        id: JSON.stringify(uuid()),\n        task: 'Complete online JavaScript course',\n        completed: true,\n    },\n    {\n        id: JSON.stringify(uuid()),\n        task: 'Jog around the park 3x',\n        completed: true,\n    },\n    {\n        id: JSON.stringify(uuid()),\n        task: '10 minutes meditation',\n        completed: false,\n    },\n    {\n        id: JSON.stringify(uuid()),\n        task: 'Read for 1 hour',\n        completed: false,\n    },\n    {\n        id: JSON.stringify(uuid()),\n        task: 'Pick up groceries',\n        completed: false,\n    },\n    {\n        id: JSON.stringify(uuid()),\n        task: 'Complete Todo App on Frontend Mentor',\n        completed: false,\n    }\n]\n\nlet initialState = []\n\nif (localStorage.getItem('tasks') === null){\n    initialState = [...dataDummy]\n    localStorage.setItem('tasks', JSON.stringify(dataDummy))\n}\nelse {\n    const data = JSON.parse(localStorage.getItem('tasks'))\n    initialState = [...data]\n}\n\nexport default initialState\n","import initialState from '../initialState.js'\nimport {v4 as uuid} from 'uuid'\n\nimport {useState} from 'react'\n\n\nconst useInitialState = () => {\n    const [state, setState] = useState(initialState)\n\n    const createTask = (name) => {\n        const newTask = {id: uuid().toString(), task: name, completed: false}\n        const storage = JSON.parse(localStorage.getItem('tasks'))\n        storage.push(newTask)\n        \n        localStorage.setItem('tasks', JSON.stringify(storage))\n\n        setState([\n            ...state,\n            newTask\n        ])\n    }\n\n    const handleCheck = (task) => {\n        const newState = state.map((item) => (item.id === task) ? {...item, 'completed': !item.completed} : item)\n        localStorage.setItem('tasks', JSON.stringify(newState))\n        setState([\n            ...newState\n        ])\n    }\n\n    const deleteTask = (task) => {\n        const newState = state.filter((item) => (item.id !== task))\n        localStorage.setItem('tasks', JSON.stringify(newState))\n        setState([\n            ...newState\n        ])\n    }\n\n    const removeCompletedTask = () => {\n        const newState = state.filter((item) => item.completed === false)\n        setState([\n            ...newState\n        ])\n    }\n\n    return {\n        state,\n        setState,\n        createTask,\n        handleCheck,\n        deleteTask,\n        removeCompletedTask\n    }\n}\n\nexport default useInitialState\n\n","import React from 'react'\nimport Banner from './components/Banner'\nimport Container from './components/Container'\n\nimport useInitialState from './hooks/useInitialState'\nimport AppContext from './context/AppContext.js'\n\nimport './styles/App.css'\n\nfunction App() {\n    const initialState = useInitialState()\n    return (\n        <div className=\"App\">\n            <AppContext.Provider value={initialState}>\n                <Banner />\n                <Container />\n            </AppContext.Provider>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}